<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
       http://www.springframework.org/schema/cache 
       http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
       http://www.springframework.org/schema/mvc  
       http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd">

    <!-- Hibernate4 -->
    <!-- 加载资源文件  其中包含变量信息，必须在Spring配置文件的最前面加载，即第一个加载-->
    <context:property-placeholder location="classpath:/config/persistence.properties" />
    <!-- 数据库映射 -->
    <!--  class="org.apache.tomcat.dbcp.dbcp.BasicDataSource" -->
    <!--  class="org.springframework.jdbc.datasource.DriverManagerDataSource" -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
      <property name="driverClassName" value="${jdbc.driverClassName}" />
      <property name="url" value="${jdbc.url}" />
      <property name="username" value="${jdbc.user}" />
      <property name="password" value="${jdbc.pass}" />
      <property name="filters" value="stat" />
      <!-- druid -->
      <property name="maxActive" value="20" />
      <property name="initialSize" value="5" />
   </bean>

    <bean id="sessionFactory" 
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan">
            <list>
                <!-- 可以加多个包 -->
                <value>com.ghit.**.pojo.po</value>
                <value>com.skyline.pcims.po</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
                <!-- prop key="hibernate.current_session_context_class">thread</prop--> 
            </props>
        </property>
    </bean>

	<!-- 配置Hibernate事务管理器，同时支持JDBC事务  -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
   	</bean>

<!--     配置事务异常封装 --> 
<!--    <bean id="persistenceExceptionTranslationPostProcessor"  -->
<!--        class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" /> -->

<!--      声明式容器事务管理 ,transaction-manager指定事务管理器为transactionManager -->
<!--     <tx:advice id="txAdvice" transaction-manager="transactionManager"> -->
<!--         <tx:attributes> -->
<!--             <tx:method name="add*" propagation="REQUIRED" /> -->
<!--             <tx:method name="save*" propagation="REQUIRED" /> -->
<!--             <tx:method name="update*" propagation="REQUIRED" /> -->
<!--             <tx:method name="delete*" propagation="REQUIRED" /> -->
<!--             <tx:method name="get*" read-only="true" /> -->
<!--             <tx:method name="find*" read-only="true" /> -->
<!--         </tx:attributes> -->
<!--     </tx:advice> -->

<!--     <aop:config expose-proxy="true"> -->
<!--         只对业务逻辑层实施事务 -->
<!--         <aop:pointcut id="txPointcut" expression="execution(* com.ghit.ecg.service.*.*(..))" /> -->
<!--         Advisor定义，切入点和通知分别为txPointcut、txAdvice -->
<!--         <aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/> -->
<!--     </aop:config> -->

<!--    <bean id="txManager"   -->
<!-- 	   class="org.springframework.jdbc.datasource.DataSourceTransactionManager">   -->
<!-- 	   <property name="dataSource" ref="dataSource" />   -->
<!-- 	</bean> -->

    <!-- 开启注解事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <!-- 使用本地JDBC对象 C3P0:C3P0NativeJdbcExtractor, DBCP:CommonsDbcpNativeJdbcExtractor,
    JBoss:JBossNativeJdbcExtractor, Weblogic:WebLogicNativeJdbcExtractor, WebSphere:WebSphereNativeJdbcExtractor -->
    <bean id="jdbcExtractor" lazy-init="true" class="org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor"/>
    <!-- Oracle使用OracleLobHandler,其它数据库均使用DefaultLobHandler -->
    <bean id="lobHandler" lazy-init="true" class="org.springframework.jdbc.support.lob.DefaultLobHandler"/>
    <!-- Spring数据库操作对象，可以使用HibernateTransactionManager事务管理  -->
    <bean id="SpringDao" class="com.ghit.common.mvc.dao.SpringDao"
        p:nativeJdbcExtractor-ref="jdbcExtractor" p:lobHandler-ref="lobHandler"
        p:dbType="mysql" p:dataSource-ref="dataSource"/>
</beans>